services:
  mongodb:
    image: mongo:5
    container_name: ${COMPOSE_PROJECT_NAME}_mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    volumes:
      - .docker/mongodb:/data/db
    networks:
      - bunest

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    volumes:
      - .docker/zookeeper:/var/lib/zookeeper
    networks:
      - bunest

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - .docker/kafka:/var/lib/kafka
    networks:
      - bunest

  kafka-ui:
    container_name: ${COMPOSE_PROJECT_NAME}_kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - bunest

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    ports:
      - 6379:6379
    volumes:
      - .docker/redis:/data
    networks:
      - bunest

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ${COMPOSE_PROJECT_NAME}_redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - bunest

networks:
  bunest:
    driver: bridge
